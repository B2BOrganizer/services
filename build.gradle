plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.3'
//	id 'org.graalvm.buildtools.native' version '0.9.27'
}

group = 'pro.raszkowski.myb2bspace'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
	targetCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation platform('io.mongock:mongock-bom:5.4.0')

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.integration:spring-integration-mail'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
	implementation 'commons-io:commons-io:2.15.0'
	implementation 'commons-codec:commons-codec:1.16.0'
	implementation 'org.apache.commons:commons-lang3:3.13.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.jsonwebtoken:jjwt:0.12.3'

	implementation 'io.mongock:mongock-springboot'
	implementation 'io.mongock:mongodb-springdata-v4-driver'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	imageName = "ghcr.io/${System.getenv("GITHUB_REPOSITORY_OWNER")}/${project.name}:${project.version}".toLowerCase()

	tags = ["ghcr.io/${System.getenv("GITHUB_REPOSITORY_OWNER")}/${project.name}:latest".toLowerCase()]

	docker {
		publishRegistry {
			username = "\$"
			password = "${System.getenv("GITHUB_REPOSITORY_TOKEN")}"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}